services:
  user_db:
      image: postgres:17
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
        interval: 2s
        timeout: 2s
        start_period: 10s  
        retries: 15
      volumes:
        - user_db:/var/lib/postgresql/data
      ports:
        - "5433:5432"
      env_file:
        - ./user-service/.env

  chat_db:
    image: postgres:17
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 2s
      timeout: 2s
      start_period: 10s  
      retries: 15
    volumes:
      - chat_db:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    env_file:
      - ./chat-service/.env

  mongodb:
    image: mongo:latest 
    container_name: my-mongo-container
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    env_file:
      - ./message-service/.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASS

  kafka:
    image: apache/kafka:3.7.0
    container_name: test-mq
    user: root
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
    volumes:
      - kafka_data:/tmp/kafka-logs

volumes:
  user_db:
  chat_db:
  mongo_data:
  kafka_data:
